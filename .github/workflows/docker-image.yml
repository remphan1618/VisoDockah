name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggering from the GitHub UI

jobs:
  build-and-push:
    name: Build and Push VisoMaster Image
    runs-on: ubuntu-latest
    permissions: # Optional: Add permissions if needed for advanced cache/registry interactions
      contents: read
      packages: write # Needed if caching to GHCR, not strictly needed for GHA cache or Docker Hub push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetches all history for all branches and tags, useful for tags/shas

      - name: Set up Docker Buildx
        # Uses the default 'docker-container' driver which works well with GHA cache
        # If you previously had 'driver: docker', removing it lets the action use the recommended default.
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # Use a Docker Hub Access Token here for better security
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # Should be a Docker Hub Access Token

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # Assuming Dockerfile is in the root
          # Enable pushing to Docker Hub only for the main branch or manual dispatch
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/visomasterdockah:latest
            # Add a tag based on the Git commit SHA for versioning
            ${{ secrets.DOCKERHUB_USERNAME }}/visomasterdockah:${{ github.sha }}
          # Use GitHub Actions cache for better layer caching between runs
          cache-from: type=gha
          cache-to: type=gha,mode=max # mode=max includes intermediate layers

      - name: Image digest
        # Runs only if the image was built and pushed
        if: steps.build-and-push.outputs.digest != ''
        run: echo "Pushed image digest: ${{ steps.build-and-push.outputs.digest }}"
