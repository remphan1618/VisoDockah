name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Runs when changes are pushed to the main branch
  workflow_dispatch:  # Allows manual triggering

# Prevent duplicate builds
concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check disk space before cleanup
        run: |
          echo "Available disk space before cleanup:"
          df -h
          
      - name: Clean up Docker cache
        run: |
          echo "Pruning Docker system to free up space..."
          docker system prune -af
          docker volume prune -f
          echo "Available disk space after Docker cleanup:"
          df -h
          
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: remphan
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Check Dockerfile content
        run: cat Dockerfile-icewm
      
      - name: Check disk space before build
        run: |
          echo "Available disk space before build:"
          df -h
          echo "Top disk usage folders:"
          du -h -d1 /
          
      - name: Build Docker Image
        run: |
          # Using --no-cache to prevent using cached layers
          docker build --no-cache -t remphan/visomasterdockah:latest -f Dockerfile-icewm .
        
      - name: Check disk space after build
        if: always()  # Run even if the build fails
        run: |
          echo "Available disk space after build:"
          df -h
          echo "Docker image size:"
          docker images remphan/visomasterdockah:latest --format "{{.Size}}"

      - name: Push Docker Image
        run: docker push remphan/visomasterdockah:latest
        
      - name: Cleanup after build
        if: always()  # Run even if the build fails
        run: |
          echo "Cleaning up after build..."
          docker system prune -af
          docker images
          echo "Final disk space:"
          df -h

# This workflow automatically builds and pushes a Docker image
# whenever code is pushed to the main branch or manually triggered.
