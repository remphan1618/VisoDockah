FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

ENV REFRESHED_AT 2024-08-12
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Pacific/Auckland

# Install only essential packages upfront
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget git python3 python3-pip \
    icewm tigervnc-standalone-server firefox \
    ffmpeg fonts-wqy-zenhei unzip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Setup basic environment
ENV HOME=/workspace
ENV DISPLAY=:1
ENV VNC_PORT=5901
ENV NO_VNC_PORT=6901
WORKDIR $HOME

# Setup VNC and window manager
COPY ./src/debian/icewm/ $HOME/
RUN chmod +x $HOME/wm_startup.sh
RUN mkdir -p $HOME/.vnc $HOME/.icewm /dockerstartup

# Setup startup scripts
COPY ./src/common/scripts/ /dockerstartup/
COPY ./src/vnc_startup_jupyterlab_filebrowser.sh /dockerstartup/vnc_startup.sh
RUN chmod +x /dockerstartup/vnc_startup.sh

# Clone VisoMaster repository
WORKDIR /workspace
RUN git clone -b v0.1.6 https://github.com/visomaster/VisoMaster.git && \
    mkdir -p /workspace/VisoMaster/Image \
    /workspace/VisoMaster/Video \
    /workspace/VisoMaster/Output \
    /workspace/VisoMaster/model_assets \
    /workspace/VisoMaster/tensorrt_engine

# Install Python dependencies
WORKDIR /workspace/VisoMaster
RUN pip install --no-cache-dir torch==2.4.1+cu124 --index-url https://download.pytorch.org/whl/cu124 && \
    pip install --no-cache-dir -r requirements_cu124.txt && \
    pip uninstall -y onnxruntime-gpu && \
    pip install --no-cache-dir onnxruntime-gpu==1.19.0 && \
    pip cache purge

# Download models (keeping these in the Docker image)
RUN python3 download_models.py

# Set environment variables for TensorRT (actual download happens via vast.ai onstart script)
ENV TRT_HOME=/workspace/VisoMaster/tensorrt_engine
ENV PATH=${TRT_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${TRT_HOME}/lib:${LD_LIBRARY_PATH}
ENV LIBRARY_PATH=${TRT_HOME}/lib:${LIBRARY_PATH}
ENV CPATH=${TRT_HOME}/include:${CPATH}

# Install jupyterlab and filebrowser
RUN pip install --no-cache-dir jupyterlab && \
    wget -O - https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash && \
    pip cache purge

# Clean system to free space
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/*

# Expose ports
EXPOSE $VNC_PORT $NO_VNC_PORT 8080 8585

# Use vnc_startup.sh as entrypoint
ENTRYPOINT ["/dockerstartup/vnc_startup.sh"]
